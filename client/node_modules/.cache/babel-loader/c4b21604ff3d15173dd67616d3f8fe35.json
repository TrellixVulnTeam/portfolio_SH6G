{"ast":null,"code":"const endpointURL = 'http://localhost:4000/graphql';\n\nasync function loadResumeData() {\n  const response = await fetch(endpointURL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify({\n      query: ` {\n                experiences {\n                    id\n                    time\n                    role\n                    company\n                    desc\n                }\n                languages {\n                    id\n                    content\n                }\n                illustrationsData {\n                    id\n                    name\n                    type\n                    time\n                    desc\n                    url\n                }\n                codingsData {\n                    id\n                    name\n                    role\n                    time\n                    desc\n                    url\n                    demo\n                    github\n                }\n                codingSkillset {\n                    id\n                    content\n                }\n                softwareSkillset {\n                    id\n                    content\n                }\n                education {\n                    id\n                    time\n                    major\n                    school\n                    location\n                    desc\n                }\n              }\n            `\n    })\n  });\n  const responseBody = await response.json();\n  return responseBody.data;\n}\n\nasync function loadCodingsData() {\n  const response = await fetch(endpointURL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify({\n      query: ` {\n                codingsData {\n                  name\n                  role\n                  time\n                  desc\n                  url\n                  demo\n                  github\n                }\n              }\n            `\n    })\n  });\n  const responseBody = await response.json();\n  return responseBody.data;\n}\n\nmodule.exports = {\n  loadResumeData,\n  loadCodingsData\n};","map":{"version":3,"sources":["/Users/Jiayu/Desktop/Salt/portfolio/client/src/pages/requests.js"],"names":["endpointURL","loadResumeData","response","fetch","method","headers","body","JSON","stringify","query","responseBody","json","data","loadCodingsData","module","exports"],"mappings":"AAAA,MAAMA,WAAW,GAAG,+BAApB;;AAEA,eAAeC,cAAf,GAAgC;AAC5B,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,WAAD,EAAc;AACtCI,IAAAA,MAAM,EAAE,MAD8B;AAEtCC,IAAAA,OAAO,EAAG;AACN,sBAAgB,kBADV;AAEN,gBAAU;AAFJ,KAF4B;AAMtCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,MAAAA,KAAK,EAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhD6B,KAAf;AANgC,GAAd,CAA5B;AA0DA,QAAMC,YAAY,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAA3B;AACA,SAAOD,YAAY,CAACE,IAApB;AACH;;AAED,eAAeC,eAAf,GAAiC;AAC7B,QAAMX,QAAQ,GAAG,MAAMC,KAAK,CAACH,WAAD,EAAc;AACtCI,IAAAA,MAAM,EAAE,MAD8B;AAEtCC,IAAAA,OAAO,EAAG;AACN,sBAAgB,kBADV;AAEN,gBAAU;AAFJ,KAF4B;AAMtCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,MAAAA,KAAK,EAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZ6B,KAAf;AANgC,GAAd,CAA5B;AAsBA,QAAMC,YAAY,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAA3B;AACA,SAAOD,YAAY,CAACE,IAApB;AACH;;AAEDE,MAAM,CAACC,OAAP,GAAiB;AAAEd,EAAAA,cAAF;AAAkBY,EAAAA;AAAlB,CAAjB","sourcesContent":["const endpointURL = 'http://localhost:4000/graphql';\n\nasync function loadResumeData() {\n    const response = await fetch(endpointURL, {\n        method: 'POST',\n        headers : { \n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n            query: ` {\n                experiences {\n                    id\n                    time\n                    role\n                    company\n                    desc\n                }\n                languages {\n                    id\n                    content\n                }\n                illustrationsData {\n                    id\n                    name\n                    type\n                    time\n                    desc\n                    url\n                }\n                codingsData {\n                    id\n                    name\n                    role\n                    time\n                    desc\n                    url\n                    demo\n                    github\n                }\n                codingSkillset {\n                    id\n                    content\n                }\n                softwareSkillset {\n                    id\n                    content\n                }\n                education {\n                    id\n                    time\n                    major\n                    school\n                    location\n                    desc\n                }\n              }\n            `\n        })\n    });\n\n    const responseBody = await response.json();\n    return responseBody.data;\n}\n\nasync function loadCodingsData() {\n    const response = await fetch(endpointURL, {\n        method: 'POST',\n        headers : { \n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n            query: ` {\n                codingsData {\n                  name\n                  role\n                  time\n                  desc\n                  url\n                  demo\n                  github\n                }\n              }\n            `\n        })\n    });\n\n    const responseBody = await response.json();\n    return responseBody.data;\n}\n\nmodule.exports = { loadResumeData, loadCodingsData };"]},"metadata":{},"sourceType":"module"}