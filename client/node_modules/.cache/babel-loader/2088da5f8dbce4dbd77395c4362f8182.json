{"ast":null,"code":"import _asyncToGenerator from\"/Users/Jiayu/Desktop/Salt/portfolio/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/Jiayu/Desktop/Salt/portfolio/client/node_modules/@babel/runtime/regenerator/index.js\";var endpointURL='https://jiayu-portfolio-server.herokuapp.com/graphql';function loadResumeData(){return _loadResumeData.apply(this,arguments);}function _loadResumeData(){_loadResumeData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,responseBody;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(endpointURL,{method:'POST',headers:{'Content-Type':'application/json','Accept':'application/json'},body:JSON.stringify({query:\" {\\n                experiences {\\n                    id\\n                    time\\n                    role\\n                    company\\n                    desc\\n                }\\n                languages {\\n                    id\\n                    content\\n                }\\n                illustrationsData {\\n                    id\\n                    name\\n                    type\\n                    time\\n                    desc\\n                    url\\n                }\\n                codingsData {\\n                    id\\n                    name\\n                    role\\n                    time\\n                    desc\\n                    url\\n                    demo\\n                    github\\n                }\\n                codingSkillset {\\n                    id\\n                    content\\n                }\\n                softwareSkillset {\\n                    id\\n                    content\\n                }\\n                education {\\n                    id\\n                    time\\n                    major\\n                    school\\n                    location\\n                    desc\\n                }\\n              }\\n            \"})});case 2:response=_context.sent;_context.next=5;return response.json();case 5:responseBody=_context.sent;return _context.abrupt(\"return\",responseBody.data);case 7:case\"end\":return _context.stop();}}},_callee);}));return _loadResumeData.apply(this,arguments);}function loadCodingsData(){return _loadCodingsData.apply(this,arguments);}function _loadCodingsData(){_loadCodingsData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,responseBody;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(endpointURL,{method:'POST',headers:{'Content-Type':'application/json','Accept':'application/json'},body:JSON.stringify({query:\" {\\n                codingsData {\\n                  name\\n                  role\\n                  time\\n                  desc\\n                  url\\n                  demo\\n                  github\\n                }\\n              }\\n            \"})});case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:responseBody=_context2.sent;return _context2.abrupt(\"return\",responseBody.data);case 7:case\"end\":return _context2.stop();}}},_callee2);}));return _loadCodingsData.apply(this,arguments);}function loadDesignData(){return _loadDesignData.apply(this,arguments);}function _loadDesignData(){_loadDesignData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var response,responseBody;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetch(endpointURL,{method:'POST',headers:{'Content-Type':'application/json','Accept':'application/json'},body:JSON.stringify({query:\" {\\n                designsData {\\n                  name\\n                  time\\n                  id\\n                  role\\n                  desc\\n                  url\\n                }\\n              }\\n            \"})});case 2:response=_context3.sent;_context3.next=5;return response.json();case 5:responseBody=_context3.sent;return _context3.abrupt(\"return\",responseBody.data);case 7:case\"end\":return _context3.stop();}}},_callee3);}));return _loadDesignData.apply(this,arguments);}function loadIllustrationData(){return _loadIllustrationData.apply(this,arguments);}function _loadIllustrationData(){_loadIllustrationData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var response,responseBody;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return fetch(endpointURL,{method:'POST',headers:{'Content-Type':'application/json','Accept':'application/json'},body:JSON.stringify({query:\" {\\n                illustrationsData {\\n                  id\\n                  name\\n                  type\\n                  time\\n                  desc\\n                  url\\n                }\\n              }\\n            \"})});case 2:response=_context4.sent;_context4.next=5;return response.json();case 5:responseBody=_context4.sent;return _context4.abrupt(\"return\",responseBody.data);case 7:case\"end\":return _context4.stop();}}},_callee4);}));return _loadIllustrationData.apply(this,arguments);}export default{loadResumeData:loadResumeData,loadCodingsData:loadCodingsData,loadDesignData:loadDesignData,loadIllustrationData:loadIllustrationData};","map":{"version":3,"sources":["/Users/Jiayu/Desktop/Salt/portfolio/client/src/pages/requests.js"],"names":["endpointURL","loadResumeData","fetch","method","headers","body","JSON","stringify","query","response","json","responseBody","data","loadCodingsData","loadDesignData","loadIllustrationData"],"mappings":"mQAAA,GAAMA,CAAAA,WAAW,CAAG,sDAApB,C,QAEeC,CAAAA,c,oJAAf,mLAC2BC,CAAAA,KAAK,CAACF,WAAD,CAAc,CACtCG,MAAM,CAAE,MAD8B,CAEtCC,OAAO,CAAG,CACN,eAAgB,kBADV,CAEN,SAAU,kBAFJ,CAF4B,CAMtCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACjBC,KAAK,urCADY,CAAf,CANgC,CAAd,CADhC,QACUC,QADV,qCA2D+BA,CAAAA,QAAQ,CAACC,IAAT,EA3D/B,QA2DUC,YA3DV,+CA4DWA,YAAY,CAACC,IA5DxB,wD,yDA+DeC,CAAAA,e,uJAAf,yLAC2BX,CAAAA,KAAK,CAACF,WAAD,CAAc,CACtCG,MAAM,CAAE,MAD8B,CAEtCC,OAAO,CAAG,CACN,eAAgB,kBADV,CAEN,SAAU,kBAFJ,CAF4B,CAMtCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACjBC,KAAK,+PADY,CAAf,CANgC,CAAd,CADhC,QACUC,QADV,uCAuB+BA,CAAAA,QAAQ,CAACC,IAAT,EAvB/B,QAuBUC,YAvBV,iDAwBWA,YAAY,CAACC,IAxBxB,0D,0DA2BeE,CAAAA,c,oJAAf,yLAC2BZ,CAAAA,KAAK,CAACF,WAAD,CAAc,CACtCG,MAAM,CAAE,MAD8B,CAEtCC,OAAO,CAAG,CACN,eAAgB,kBADV,CAEN,SAAU,kBAFJ,CAF4B,CAMtCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACjBC,KAAK,mOADY,CAAf,CANgC,CAAd,CADhC,QACUC,QADV,uCAsB+BA,CAAAA,QAAQ,CAACC,IAAT,EAtB/B,QAsBUC,YAtBV,iDAuBWA,YAAY,CAACC,IAvBxB,0D,yDA0BeG,CAAAA,oB,sKAAf,yLAC2Bb,CAAAA,KAAK,CAACF,WAAD,CAAc,CACtCG,MAAM,CAAE,MAD8B,CAEtCC,OAAO,CAAG,CACN,eAAgB,kBADV,CAEN,SAAU,kBAFJ,CAF4B,CAMtCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACjBC,KAAK,yOADY,CAAf,CANgC,CAAd,CADhC,QACUC,QADV,uCAsB+BA,CAAAA,QAAQ,CAACC,IAAT,EAtB/B,QAsBUC,YAtBV,iDAuBWA,YAAY,CAACC,IAvBxB,0D,uDA0BA,cAAe,CAAEX,cAAc,CAAdA,cAAF,CAAkBY,eAAe,CAAfA,eAAlB,CAAmCC,cAAc,CAAdA,cAAnC,CAAmDC,oBAAoB,CAApBA,oBAAnD,CAAf","sourcesContent":["const endpointURL = 'https://jiayu-portfolio-server.herokuapp.com/graphql';\n\nasync function loadResumeData() {\n    const response = await fetch(endpointURL, {\n        method: 'POST',\n        headers : { \n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n            query: ` {\n                experiences {\n                    id\n                    time\n                    role\n                    company\n                    desc\n                }\n                languages {\n                    id\n                    content\n                }\n                illustrationsData {\n                    id\n                    name\n                    type\n                    time\n                    desc\n                    url\n                }\n                codingsData {\n                    id\n                    name\n                    role\n                    time\n                    desc\n                    url\n                    demo\n                    github\n                }\n                codingSkillset {\n                    id\n                    content\n                }\n                softwareSkillset {\n                    id\n                    content\n                }\n                education {\n                    id\n                    time\n                    major\n                    school\n                    location\n                    desc\n                }\n              }\n            `\n        })\n    });\n\n    const responseBody = await response.json();\n    return responseBody.data;\n}\n\nasync function loadCodingsData() {\n    const response = await fetch(endpointURL, {\n        method: 'POST',\n        headers : { \n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n            query: ` {\n                codingsData {\n                  name\n                  role\n                  time\n                  desc\n                  url\n                  demo\n                  github\n                }\n              }\n            `\n        })\n    });\n\n    const responseBody = await response.json();\n    return responseBody.data;\n}\n\nasync function loadDesignData() {\n    const response = await fetch(endpointURL, {\n        method: 'POST',\n        headers : { \n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n            query: ` {\n                designsData {\n                  name\n                  time\n                  id\n                  role\n                  desc\n                  url\n                }\n              }\n            `\n        })\n    });\n\n    const responseBody = await response.json();\n    return responseBody.data;\n}\n\nasync function loadIllustrationData() {\n    const response = await fetch(endpointURL, {\n        method: 'POST',\n        headers : { \n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n            query: ` {\n                illustrationsData {\n                  id\n                  name\n                  type\n                  time\n                  desc\n                  url\n                }\n              }\n            `\n        })\n    });\n\n    const responseBody = await response.json();\n    return responseBody.data;\n}\n\nexport default { loadResumeData, loadCodingsData, loadDesignData, loadIllustrationData };"]},"metadata":{},"sourceType":"module"}